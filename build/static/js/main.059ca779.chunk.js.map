{"version":3,"sources":["components/SynesthesiaContext.jsx","components/Spinner.jsx","Tools.js","components/MET/Departments.jsx","components/Header.jsx","components/Intro.jsx","static/link.svg","static/g-clef.svg","components/MET/ArtObject.jsx","components/MET/ArtObjects.jsx","components/MET/DepartmentDetails.jsx","components/MET/ArtObjSharing.jsx","components/SynesthesiaCanvas.jsx","components/Synesthesia.jsx","components/Main.jsx","App.js","reportWebVitals.js","index.js"],"names":["SynesthesiaContext","React","createContext","Spinner","memo","className","slugify","str","toLowerCase","replace","split","join","require","default","defaults","headers","common","RGBToHSL","r","g","b","s","h","min","Math","max","maxMinusMin","maxPlusMin","l","round","Departments","toggleMenu","showingMenu","useState","deptsData","setDetptsData","kntxt","useContext","useEffect","getDepts","a","metAPI","getDepartments","depts","departments","memoizeOne","memoGetDepts","onClick","style","top","length","map","dept","to","displayName","departmentId","Header","setShowingMenu","document","body","overflow","Intro","listLength","images","setImages","readyToFetch","setReadyToFetch","fetch","then","res","json","objectIDs","floor","random","ArtObject","obj","timeOffsetIndex","cardOpen","setCardOpen","showInfo","setShowInfo","hideCard","setHideCard","setTimeout","opacity","draggable","alt","title","src","primaryImageSmall","objectID","id","linkSVG","gclefSVG","objectDate","culture","medium","classification","artistDisplayBio","artistDisplayName","artistBeginDate","artistEndDate","artistNationality","ArtObjects","ids","options","ref","setRef","visible","setVisible","observer","IntersectionObserver","entry","isIntersecting","observe","unobserve","useOnScreen","rootMargin","metObjs","setMetObjs","idsState","setIdsState","getObjs","slice","tempIds","restIds","objs","i","DepartmentDetails","match","objIDs","setObjsIDs","slug","params","getDeptObjsBySlug","deptID","getDepartmentObjectIDs","deptObjIDs","Promise","all","getDeptObjs","filter","key","setids","ArtObjSharing","setObj","getObj","objJSON","console","log","SynesthesiaCanvas","imgURL","color","setColor","mouse","setMouse","synth","setSynth","canvaReady","setCanvasReady","timeoutObj","setTimeoutObjs","modeCheckBoxRef","useRef","modeSwitchRef","switcherRef","proxy","process","canvasRef","colorSquareRef","ctxState","setCtxState","startSound","Tone","synthObj","toDestination","canvas","current","ctx","getContext","img","Image","crossOrigin","onload","proportionedHeight","this","naturalHeight","window","innerWidth","naturalWidth","width","height","drawImage","prepareSoundCanvas","background","y","scrollY","left","x","scrollX","e","dm","classList","contains","remove","add","switchMode","checked","type","name","defaultChecked","onMouseMove","ev","clearTimeout","pageX","pageY","offsetParent","offsetLeft","offsetTop","getImageData","data","RGBAToHSLA","levels","soundFreq","volume","value","oscillator","envelope","attack","triggerAttackRelease","display","Synesthesia","artObj","setArtObj","artObjID","objDataJSON","primaryImage","Main","exact","path","component","render","routerprops","App","paintingData","setPaintingData","metDepts","setMetDepts","Set","multiRes","setMultiRes","url","endpoints","getURL","endpoint","queryParams","queryParamStr","Object","entries","val","getQueryParamStr","callEndpoint","enpoint","stateObjSetter","forEach","deptKey","dataSetPromiseArr","Array","_","String","fromCharCode","letter","push","isHighlight","hasImages","q","values","dataSetArr","objIDset","j","has","objId","objsIDArr","objID","pop","Provider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"4RAQaA,EAAqBC,IAAMC,gB,OCGzBC,EATCF,IAAMG,MAAK,WACzB,OACE,sBAAKC,UAAU,UAAf,UACE,qBAAKA,UAAU,mBACf,qBAAKA,UAAU,yB,eCNfC,EAAU,SAAAC,GAAG,OAAIA,EAAIC,cAAcC,QAAQ,mBAAoB,IAAIC,MAAM,KAAKC,KAAK,aAiB3EC,EAAQ,IAASC,QAClBC,SAASC,QAAQC,OAAvB,cASP,IAKMC,EAAW,SAACC,EAAGC,EAAGC,GAOtBF,GAAK,IACLC,GAAK,IACLC,GAAK,IAGL,IAUIC,EAAGC,EAVHC,EAAMC,KAAKD,IAAIL,EAAGC,EAAGC,GACrBK,EAAMD,KAAKC,IAAIP,EAAGC,EAAGC,GAErBM,EAAcD,EAAMF,EACpBI,EAAaF,EAAMF,EAGnBK,EAAID,EAAa,EAyBrB,OApBoB,IAAhBD,GACAL,EAAIO,GAAK,GAAMF,EAAcC,EAAaD,GAAe,EAAMA,GAG3DJ,EADAJ,IAAMO,GACDN,EAAIC,GAAKM,EACPP,IAAMM,EACT,GAAOL,EAAIF,GAAKQ,EAEhB,GAAOR,EAAIC,GAAKO,GAGxBL,EAAIC,EAAI,EASL,CAFPA,GAHAA,EAAIE,KAAKK,MAAU,GAAJP,IAGP,EAAIA,EAAI,IAAMA,EAEXD,EAAGO,I,QCzCDE,EA3BK7B,IAAMG,MAAK,YAAkC,IAA/B2B,EAA8B,EAA9BA,WAAYC,EAAkB,EAAlBA,YAE5C,EAAqCC,mBAAS,IAA9C,mBAAQC,EAAR,KAAmBC,EAAnB,KACQC,EAAUC,qBAAWrC,GAArBoC,MAWR,OATAE,qBAAU,WACR,IAAMC,EAAQ,uCAAG,4BAAAC,EAAA,sEACGJ,EAAMK,OAAOC,iBADhB,OACXC,EADW,OAEfR,EAAcQ,EAAMC,aAFL,2CAAH,qDAIOC,YAAWN,EAChCO,KACC,CAACV,IAGF,qBAAK/B,UAAU,YAAY0C,QAAUhB,EAAaiB,MAAShB,EAA6B,GAAf,CAACiB,KAAM,KAAhF,SAEIf,EAAUgB,QAAUlB,EAAcE,EAAUiB,KAC1C,SAAAC,GAAI,OAAI,cAAC,IAAD,CAA8BC,GAAI,MAAM/C,EAAQ8C,EAAKE,aAArD,SAAoEF,EAAKE,aAA9DF,EAAKG,iBACpB,cAAC,EAAD,SCLCC,EAlBA,WAEb,MAAwCvB,oBAAS,GAAjD,mBAAQD,EAAR,KAAqByB,EAArB,KACM1B,EAAa,WACjB2B,SAASC,KAAKX,MAAMY,SAAa5B,EAAyB,OAAX,SAC/CyB,GAAgBzB,IAElB,OACE,mCACE,cAAC,IAAD,CAAMqB,GAAG,IAAT,SACE,+CAEA,mBAAGN,QAAUhB,EAAa1B,UAAU,YAApC,yBACA,cAAC,EAAD,CAAa0B,WAAYA,EAAYC,YAAaA,EAAayB,eAAgBA,QC4BxEI,EAxCD,WAEZ,IAGgBC,EAHhB,EAA8B7B,mBAAS,MAAvC,mBAAQ8B,EAAR,KAAgBC,EAAhB,KACA,EAA0C/B,mBAAS,MAAnD,mBAAQgC,EAAR,KAAsBC,EAAtB,KAcA,OAVA5B,qBAAU,WACJ2B,IACFE,MAAM,8HACLC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GAAS,OAAOL,EAAUK,EAAIE,cACpCL,GAAgB,SAAAhD,GAAC,OAAKA,QAGvB,CAAC+C,IAGF,sBAAK5D,UAAU,QAAf,UACE,0HAGA,6MAGkB,6CAHlB,4CAKA,uBACA,6BAAM0D,EAAS,sDAAwD,gCACrEA,EACD,cAAC,IAAD,CAAMV,GAAE,aAASU,GAzBND,EAyBqBC,EAAOb,OAzBd1B,KAAKgD,MAAMhD,KAAKiD,SAAWX,MAyBpD,SACC,2EACS,cAAC,EAAD,QCrCF,MAA0B,iCCA1B,MAA0B,mCCwD1BY,EAnDGzE,IAAMG,MAAK,YAA+B,IAA5BuE,EAA2B,EAA3BA,IAAKC,EAAsB,EAAtBA,gBACjC,EAAgC3C,oBAAS,GAAzC,mBAAO4C,EAAP,KAAiBC,EAAjB,KACA,EAAgC7C,oBAAS,GAAzC,mBAAO8C,EAAP,KAAiBC,EAAjB,KACA,EAAkC/C,oBAAS,GAA3C,mBAAQgD,EAAR,KAAkBC,EAAlB,KAWA,OATA5C,qBAAU,WACR6C,YAAW,kBAAMD,GAAY,KAA0B,IAAlBN,KACpC,CAACM,EAAaN,IAQb,sBAEIvE,UAAW,gBAAkB4E,EAAW,GAAMJ,EAAW,QAAU,SACnE9B,QATR,WACE+B,GAAaD,GACbM,YAAW,kBAAMH,GAAaD,KAAW,MAQnC/B,MAASiC,EAAW,CAACG,QAAS,GAAK,GAJvC,UAMI,qBAAKC,UAAU,OAAOC,IAAKX,EAAIY,MAAOC,IAAKb,EAAIc,oBAC7CV,GACE,sBAAK1E,UAAU,eAAf,UACI,cAAC,IAAD,CAAMgD,GAAE,sBAAkBsB,EAAIe,UAA9B,SAA2C,qBAAKC,GAAG,YAAYL,IAAI,YAAYE,IAAKI,MACpF,cAAC,IAAD,CAAMvC,GAAE,aAASsB,EAAIe,UAArB,SAAkC,qBAAKC,GAAG,YAAYL,IAAI,YAAYE,IAAKK,MAC3E,6BAAKlB,EAAIY,QACT,6BAAKZ,EAAImB,aACT,6BAAKnB,EAAIoB,UACT,qBAAI1F,UAAU,aAAd,UACI,+BACI,6CADJ,IAC8BsE,EAAIqB,UAElC,+BACI,oDADJ,IACqCrB,EAAIsB,qBAG3CtB,EAAIuB,kBACF,+BACE,6BAAMvB,EAAIwB,oBACR,oBAAG9F,UAAU,eAAb,eAAgCsE,EAAIyB,gBAApC,MAA0DzB,EAAI0B,cAA9D,OACA,4BAAK1B,EAAIuB,mBACT,4BAAKvB,EAAI2B,4BA1BnB3B,EAAIe,aCQtB,IA0Cea,EA1CI,SAAC,GAAa,IAAXC,EAAU,EAAVA,IAEpB,EA1BF,SAAqBC,GACnB,MAAwBxE,mBAAS,MAAjC,mBAAQyE,EAAR,KAAaC,EAAb,KACA,EAAgC1E,oBAAS,GAAzC,mBAAQ2E,EAAR,KAAiBC,EAAjB,KAmBA,OAjBAvE,qBAAU,WACR,IAAMwE,EAAW,IAAIC,sBAAqB,YAAgB,IAAbC,EAAY,oBACvDH,EAAWG,EAAMC,kBAChBR,GAMH,OAJGC,GACDI,EAASI,QAAQR,GAGZ,WACFA,GACDI,EAASK,UAAUT,MAItB,CAACA,EAAKD,IAEF,CAACE,EAAQC,GAKYQ,CAAY,CAAEC,WAAY,WAAtD,mBAAQV,EAAR,KAAgBC,EAAhB,KAIA,EAAgC3E,mBAAS,IAAzC,mBAAQqF,EAAR,KAAiBC,EAAjB,KACA,EAAkCtF,mBAASuE,GAA3C,mBAAQgB,EAAR,KAAkBC,EAAlB,KACA,EAA0CxF,oBAAS,GAAnD,mBAAQgC,EAAR,KAAsBC,EAAtB,KACQ9B,EAAUC,qBAAWrC,GAArBoC,MAsBR,OAnBAE,qBAAU,WACR,IAAMoF,EAAO,uCAAG,kCAAAlF,EAAA,0DACXgF,EAAStE,OADE,yBAEe,CAACsE,EAASG,MAAM,EAXjC,IAW8CH,EAASG,MAXvD,KAWJC,EAFM,KAEGC,EAFH,cAGKzF,EAAMK,OAAOiF,QAAQE,GAH1B,OAGRE,EAHQ,OAIZP,EAAW,GAAD,mBAAKD,GAAL,YAAiBQ,KAC3BL,EAAYI,GACZ3D,GAAgB,GANJ,2CAAH,qDAWV0C,GAAW3C,IACZC,GAAgB,GAChBwD,OAED,CAACd,EAASY,EAAUpF,EAAOkF,EAASrD,IAIrC,sBAAK5D,UAAU,wBAAf,UAEIiH,EAAQpE,OAASoE,EAAQnE,KAAI,SAACwB,EAAKoD,GAAN,OAAY,cAAC,EAAD,CAAsBpD,IAAMA,EAAMC,gBAAkBmD,EA9BnF,IA8BiDA,MAAsD,GAEnH,oBAAGrB,IAAMC,EAAShB,GAAG,WAArB,gCAAqD6B,EAAStE,OAASsE,EAAStE,OAAU,OAAS,KAAnG,6CAAoC,YAClCsE,EAAStE,SAAWe,EAAe,cAAC,EAAD,IAAc,OCZ1C+D,EAjDW,SAAC,GAAa,IAAZC,EAAW,EAAXA,MAE1B,EAA+BhG,mBAAS,IAAxC,mBAAQiG,EAAR,KAAgBC,EAAhB,KACA,EAAqClG,mBAAS,IAA9C,mBAAQC,EAAR,KAAmBC,EAAnB,KAEOC,EAASC,qBAAWrC,GAApBoC,MAEDgG,EAAOH,EAAMI,OAAOjF,KAwB1B,OArBAd,qBAAU,WACR6F,EAAW,IAGG,uCAAG,4BAAA3F,EAAA,sEACGJ,EAAMK,OAAOC,iBADhB,OACXC,EADW,OAEfR,EAAcQ,EAAMC,aAFL,2CAAH,oDAIdL,GAGiB,uCAAG,8BAAAC,EAAA,sEACCJ,EAAMK,OAAO6F,kBAAkBF,GADhC,cACdG,EADc,gBAEKnG,EAAMK,OAAO+F,uBAAuBD,GAFzC,cAEdE,EAFc,YAGlBN,EAHkB,SAGDO,QAAQC,IAAIF,GAHX,8EAAH,oDAKjBG,KAEG,CAACxG,EAAOgG,IAIX,gCACIlG,EAAUgB,OACRhB,EAAU2G,QAAQ,SAAAzF,GAAI,OAAIA,EAAKgF,OAASA,KACvCjF,KAAI,SAACC,EAAM0F,GAAP,OACH,6BAAiB1F,EAAKE,aAAZwF,MAEZ,cAAC,EAAD,IAGFZ,EAAOhF,OAAS,cAAC,EAAD,CAAYsD,IAAM0B,EAASa,OAASZ,IAAkB,cAAC,EAAD,QClB/Da,EAxBO,SAAC,GAAe,IAAbf,EAAY,EAAZA,MAEf7F,EAAUC,qBAAWrC,GAArBoC,MACR,EAA0CH,oBAAS,GAAnD,mBAAOgC,EAAP,KAAsBC,EAAtB,KACA,EAAwBjC,mBAAS,MAAjC,mBAAQ0C,EAAR,KAAasE,EAAb,KAaA,OAVA3G,qBAAU,WAOL2B,GANS,uCAAG,WAAM0B,GAAN,eAAAnD,EAAA,sEACOJ,EAAMK,OAAOyG,OAAOvD,GAD3B,OACTwD,EADS,OAEbF,EAAOE,GACPjF,GAAgB,GAChBkF,QAAQC,IAAIF,GAJC,2CAAH,qDAMKD,CAAOjB,EAAMI,OAAO1C,OAIrC,mCACIhB,EAAM,cAAC,EAAD,CAAWA,IAAKA,IAAU,sD,QCgIzB2E,EAlJW,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACzB,EAA0BtH,mBAAS,MAAnC,mBAAOuH,EAAP,KAAcC,EAAd,KACA,EAA0BxH,mBAAS,MAAnC,mBAAOyH,EAAP,KAAcC,EAAd,KACA,EAA0B1H,mBAAS,MAAnC,mBAAO2H,EAAP,KAAcC,EAAd,KACA,EAAqC5H,oBAAS,GAA9C,mBAAO6H,EAAP,KAAmBC,EAAnB,KAEA,EAAqC9H,mBAAS,MAA9C,mBAAO+H,EAAP,KAAmBC,EAAnB,KAEMC,EAAkBC,iBAAO,MACzBC,EAAgBD,iBAAO,MACvBE,EAAcF,iBAAO,MAmBrBG,EAAQC,+BAERC,EAAYL,iBAAO,MACnBM,EAAiBN,iBAAO,MAC9B,EAAgClI,mBAAS,IAAzC,mBAAOyI,EAAP,KAAiBC,EAAjB,KAEMC,EAAU,uCAAG,4BAAApI,EAAA,sEACTqI,MADS,OAETC,GAAW,IAAID,KAAaE,gBAClClB,EAASiB,GAHM,2CAAH,qDAmEhB,OA1BAxI,qBAAU,WAuBFiH,GAtBuB,SAAAA,GACvB,IAAMyB,EAASR,EAAUS,QACnBC,EAAMF,EAAOG,WAAW,MACxBC,EAAM,IAAIC,MAChBD,EAAIE,YAAc,YAClBF,EAAIG,OAAS,WACT,IAAMC,EACDC,KAAKC,cAAgBC,OAAOC,WAC7BH,KAAKI,aACTb,EAAOc,MAAQH,OAAOC,WACtBZ,EAAOe,OAASP,EAChBN,EAAIc,UAAUZ,EAAK,EAAG,EAAGJ,EAAOc,MAAON,GACvCb,EAAYO,GACZnB,GAAe,IAGfqB,EAAI5F,IADM,cAAX+D,EACC,WAAcA,GAEJe,EAAQf,EAId0C,CAAmB1C,KAChC,CAACA,EAAQe,EAAOF,EAAeF,IAG9B,gCACI,qBACIxD,IAAK+D,EACLpK,UAAU,eACV2C,MACIwG,EACM,CACI0C,WAAY1C,EACZvG,IAAKyG,EAAMyC,EAAI,IAAMR,OAAOS,QAC5BC,KAAM3C,EAAM4C,EAAI,GAAKX,OAAOY,SAEhC,KAGd,qBAAK5G,GAAG,cAAce,IAAK0D,EAAerH,QA/F3B,SAAAyJ,IATJ,SAAAnM,GACf,IAAIoM,EAAKpM,EACLgK,EAAYY,QAAQyB,UAAUC,SAASF,GACvCpC,EAAYY,QAAQyB,UAAUE,OAAOH,GAErCpC,EAAYY,QAAQyB,UAAUG,IAAIJ,GAKtCK,CAAW,YACX5C,EAAgBe,QAAQ8B,SAAW7C,EAAgBe,QAAQ8B,SA6FvD,SACI,sBAAMpH,GAAG,WAAWe,IAAK2D,MAE7B,uBACI2C,KAAK,WACLC,KAAK,OACLvG,IAAKwD,EACLvE,GAAG,gBACHuH,gBAAc,IAGlB,wBACIvH,GAAG,eACHwH,YAzFU,SAAAC,GAClBC,aAAarD,GACb,IAAasC,EAAgBc,EAAvBE,MAAiBnB,EAAMiB,EAAbG,MAEhB,GAAI/C,EAAUS,QAAQuC,aAAc,CAChC,MAAkChD,EAAUS,QAC5CqB,GADA,EAAQmB,WAERtB,GAFA,EAAoBuB,UAIxB,kBAAqBhD,EAASiD,aAAarB,EAAGH,EAAG,EAAG,GAAGyB,KAAvD,GAAO1M,EAAP,KAAUC,EAAV,KAAaC,EAAb,KAAgBoB,EAAhB,KACAiH,EAAS,QAAD,OAASvI,EAAT,aAAeC,EAAf,aAAqBC,EAArB,aAA2BoB,EAA3B,MACR,MV9BW,SAACtB,EAAGC,EAAGC,EAAGoB,GAC3B,MAAkBvB,EAASC,EAAGC,EAAGC,GAAjC,mBACA,MAAO,CADP,eACiBoB,GU4BOqL,CAAW3M,EAAGC,EAAGC,EAAGoB,GAAtC,mBAAOlB,EAAP,KAAUD,EAAV,KAAaO,EAAb,KACMkM,EAAS,EAAIlM,EAAI,EACnBmM,EAAgB,KAAJzM,EAAW,IAC3B2I,EACI9E,YAAW,WACPyE,EAAMoE,OAAOC,MAAQpD,IAAcxJ,EAAI,IAEnCO,EAAI,IACJgI,EAAMsE,WAAWlB,KAAO,OACxBpD,EAAMuE,SAASC,OAAS,KAExBxE,EAAMsE,WAAWlB,KAAO,WACxBpD,EAAMuE,SAASC,OAAS,IAGxBlE,EAAgBe,QAAQ8B,UACxBgB,GAAaA,EAAYD,GAE7BlE,EAAMyE,qBAAqBN,EAAW,QACvC,IAEPpE,EAAS,CAAE2C,IAAGH,OA0DNzF,IAAK8D,IAGT,sBAAKnK,UAAU,QAAQ2C,MAAO4G,EAAQ,CAAE0E,QAAS,QAAW,GAA5D,UACI,sHAIExE,EAAa,wBAAQ/G,QAAS6H,EAAjB,+BAA0D,gCAAK,+CAAsB,cAAC,EAAD,cCjGrG2D,EA1CK,SAAC,GAAe,IAAbtG,EAAY,EAAZA,MAEb7F,EAAUC,qBAAWrC,GAArBoC,MACR,EAA8BH,mBAAS,IAAvC,mBAAQuM,EAAR,KAAgBC,EAAhB,KAEMC,EAAWzG,EAAMI,OAAO1C,GAwB9B,OAvBAyD,QAAQC,IAAI,CAACqF,aAMbpM,qBAAU,WAKQ,UAAboM,EAJS,uCAAG,WAAM/I,GAAN,eAAAnD,EAAA,sEACWJ,EAAMK,OAAOyG,OAAOvD,GAD/B,OACTgJ,EADS,OAEbF,EAAUE,GAFG,2CAAH,qDAKVzF,CAAOwF,GAEPD,EACE,CACEzB,KAAM,QACN4B,aAAc,gBAInB,CAACH,EAAWrM,EAAOsM,IAGpB,qBAAKrO,UAAU,cAAf,SACImO,IAAW,GACX,gCACE,6BAAMA,EAAOjJ,QACb,cAAC,EAAD,CAAmBgE,OAASiF,EAAOI,kBAElC,cAAC,EAAD,OCjBIC,EAlBF,WAEX,OACE,iCACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAYnL,IAClC,cAAC,IAAD,CAAOkL,KAAK,SAASE,OAAS,SAAAC,GAAW,OACvC,cAAC,EAAD,CAAajH,MAAQiH,EAAYjH,WAEnC,cAAC,IAAD,CAAO6G,OAAK,EAACC,KAAK,kBAAkBE,OAAS,SAAAC,GAAW,OACtD,cAAC,EAAD,CAAejH,MAAQiH,EAAYjH,WAErC,cAAC,IAAD,CAAO8G,KAAK,WAAWE,OAAS,SAAAC,GAAW,OACzC,cAAC,EAAD,CAAmBjH,MAAQiH,EAAYjH,e,MCkFhCkH,MA5Ff,WAEE,MAA0ClN,mBAAS,IAAnD,mBAAQmN,EAAR,KAAsBC,EAAtB,KACA,EAAmCpN,mBAAS,IAA5C,mBAAQqN,EAAR,KAAmBC,EAAnB,KACA,EAAkCtN,mBAAS,IAAIuN,KAA/C,mBAAQC,EAAR,KAAkBC,EAAlB,KAKQjN,EAAS,CACbkN,IAAK,4DACLC,UAAW,CAAE,UAAW,SAAU,cAAe,UACjDC,OAAQ,SAASC,EAAUC,GACzB,IAAIC,EbjBa,SAAAD,GACvB,OAAIA,EACGE,OAAOC,QAAQH,GAAa5M,KACjC,mCAAE2F,EAAF,KAAOqH,EAAP,qBAAmBrH,EAAnB,YAA0BqH,MACxBxP,KAAK,KAHe,GagBEyP,CAAiBL,GACrC,OAAOtE,KAAKkE,IAAMG,GAAYE,EAAiB,IAAMA,EAAgB,KAEvEK,aAAa,WAAD,4BAAE,WAAeC,GAAf,2BAAA9N,EAAA,6DAAwBuN,EAAxB,+BAAoC,KAApC,kBAEL5L,MAAMsH,KAAKoE,OAAOS,EAASP,IAC/B3L,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GAAG,OAAIA,MAJH,gDAAF,mDAAC,GAMb3B,eAAe,WAAD,4BAAE,WAAe6N,GAAf,eAAA/N,EAAA,sEACEiJ,KAAK4E,aAAa,eADpB,cACVhM,EADU,QAEVzB,YAAY4N,SAAQ,SAAApN,GACtB,IAAIgF,EAAO9H,EAAQ8C,EAAKE,aACxBF,EAAKgF,KAAOA,KAJA,kBAMP/D,GANO,gDAAF,mDAAC,GAQfmE,uBAAuB,WAAD,4BAAE,WAAeiI,GAAf,sBAAAjO,EAAA,6DAClBkO,EAAoB,GbrCP,YAAIC,MAAM,KAAKxN,KAAI,SAACyN,EAAG7I,GAAJ,OAAU8I,OAAOC,aAAa,GAAK/I,MasC1DyI,QAAb,+BAAAhO,EAAA,MAAsB,WAAOuO,EAAQhJ,GAAf,SAAAvF,EAAA,sDACpBkO,EAAkBM,KAChB,EAAKX,aAAa,SAClB,CAACY,aAAa,EAAM1N,aAAakN,EAASS,WAAU,EAAMC,EAAEJ,KAH1C,2CAAtB,yDAFsB,kBAQfrI,QAAQC,IAAI+H,GAAmBtM,MACpC,SAAAgN,GACE,IAAIC,EAAa,GACbC,EAAW,IAAI9B,IAWnB,OAVA4B,EAAOZ,SAAS,SAAAnM,GACXA,EAAIE,WACLF,EAAIE,UAAUiM,SAAQ,SAAChE,EAAE+E,GACnBD,EAASE,IAAIhF,IACf6E,EAAWL,KAAKxE,GAElB8E,EAASzE,IAAIL,SAIZ6E,MAtBW,2CAAF,mDAAC,GA0BvBnI,OAAO,WAAD,4BAAE,WAAeuI,GAAf,eAAAjP,EAAA,sEACUiJ,KAAK4E,aAAL,kBAA6BoB,IADvC,cACFpN,EADE,yBAECA,GAFD,gDAAF,mDAAC,GAIPqD,QAAQ,WAAD,4BAAE,WAAegK,GAAf,eAAAlP,EAAA,sEACUkG,QAAQC,IAAI+I,EAAUvO,IAAV,uCAAc,WAAMwO,GAAN,SAAAnP,EAAA,sEAAqBJ,EAAMK,OAAOyG,OAAOyI,GAAzC,mFAAd,wDADtB,cACH7J,EADG,yBAEAA,GAFA,2CAAF,mDAAC,GAIRQ,kBAAkB,WAAD,4BAAE,WAAeF,GAAf,iBAAA5F,EAAA,sEACCiJ,KAAK4E,aAAa,eADnB,cACb1N,EADa,OAEbS,EAAOT,EAAMC,YAAYiG,QAAO,SAAAzF,GAElC,OADe9C,EAAQ8C,EAAKE,eACR8E,KACnBwJ,MALc,kBAMVxO,EAAKG,cANK,gDAAF,mDAAC,IAWhBnB,EAAK,mDACN,CAAEK,WACF,CAAE2M,eAAcC,oBAChB,CAAEC,WAAWC,gBACb,CAAEE,WAAUC,gBAGjB,OACE,cAAC1P,EAAmB6R,SAApB,CAA6B5D,MAAO,CAAE7L,SAAtC,SACE,sBAAK/B,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,IAAD,CAAO0O,KAAK,IAAIC,UAAYH,UClFrBiD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB5N,MAAK,YAAkD,IAA/C6N,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASrD,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFvL,SAAS6O,eAAe,SAM1BT,M","file":"static/js/main.059ca779.chunk.js","sourcesContent":["import React from 'react';\n\n// The defaultValue argument is only used when a component does not have a\n// matching Provider above it in the tree. This default value can be helpful \n// for testing components in isolation without wrapping them. \n// Note: passing undefined as a Provider value does not cause consuming \n// components to use defaultValue.\n\nexport const SynesthesiaContext = React.createContext();","import React from 'react';\n\nconst Spinner = React.memo(() => {\n  return (\n    <div className=\"spinner\">\n      <div className=\"double-bounce1\"></div>\n      <div className=\"double-bounce2\"></div>\n    </div>\n  );\n});\n\nexport default Spinner;","const slugify = str => str.toLowerCase().replace(/[^\\x61-\\x7A \\s]/g, \"\").split(' ').join('-');\n\nconst asciiLower = () => [...Array(26)].map((_, i) => String.fromCharCode(97 + i));\n\nconst getQueryParamStr = queryParams => {\n  if(!queryParams) return ''\n  return Object.entries(queryParams).map(\n    ([key, val]) => `${key}=${val}`\n    ).join('&');\n}\n\n\n// Creating image buffer with Axios\n// USES CORS PROXY: https://stackoverflow.com/questions/43871637/no-access-control-allow-origin-header-is-present-on-the-requested-resource-whe/43881141#43881141\n\n// const proxy = null // replace with heroku CORS proxy in account\n\nconst axios = require('axios').default;\ndelete axios.defaults.headers.common[\"Authorization\"];\n\n// \"imgURL\" replace with the resource locator\n// const getImage = async () => {\n//   let image = await axios.get(proxy + \"imgURL\", {responseType: 'arraybuffer',  'Access-Control-Allow-Methods' : 'GET'});\n//   let returnedB64 = Buffer.from(image.data).toString('base64');\n//   console.log(\"LOGGING IMAGE\", returnedB64);\n// }\n\nconst RGBAToHSLA = (r, g, b, a) => {\n  const [h, s, l] = RGBToHSL(r, g, b);\n  return [h, s, l, a]\n}\n\nconst RGBToHSL = (r, g, b) => {\n  /* \n  Return h,s,l values from r,g,b\n  Pseudo code from https://www.niwa.nu/2013/05/math-behind-colorspace-conversions-rgb-hsl/\n   */\n\n  // Normalize RGB values\n  r /= 255;\n  g /= 255;\n  b /= 255;\n\n  // Find the min and max\n  let min = Math.min(r, g, b);\n  let max = Math.max(r, g, b);\n\n  let maxMinusMin = max - min;\n  let maxPlusMin = max + min;\n\n  // Luminace\n  let l = maxPlusMin / 2;\n\n  // Saturation and Hue\n  let s, h;\n\n  if (maxMinusMin !== 0) {\n      s = l <= 0.5 ? maxMinusMin / maxPlusMin : maxMinusMin / (2.0 - maxMinusMin)\n\n      if (r === max) {\n          h = (g - b) / maxMinusMin\n      } else if (g === max) {\n          h = 2.0 + (b - r) / maxMinusMin\n      } else {\n          h = 4.0 + (r - g) / maxMinusMin\n      }\n  } else {\n      s = h = 0;\n  }\n\n  // convert Hue to degrees\n  h = Math.round(h * 60);\n\n  // if Hue negative add 360°\n  h = h < 0 ? h + 360 : h;\n\n  return [h, s, l]\n}\n\n\n\n\n// getImage();\n\nexport {\n  slugify, \n  getQueryParamStr, \n  asciiLower,\n  RGBAToHSLA\n};","import React, { useContext, useEffect, useState } from 'react';\nimport { SynesthesiaContext } from '../SynesthesiaContext';\nimport Spinner from '../Spinner';\nimport { Link } from 'react-router-dom';\nimport './MET.css';\nimport { slugify } from '../../Tools';\nimport memoizeOne from 'memoize-one';\n\nconst Departments = React.memo(({ toggleMenu, showingMenu }) => {\n\n  const [ deptsData, setDetptsData ] = useState([]);\n  const { kntxt } = useContext(SynesthesiaContext);\n\n  useEffect(() => {\n    const getDepts = async () => {\n      let depts = await kntxt.metAPI.getDepartments()\n      setDetptsData(depts.departments)\n    };\n    const memoGetDepts = memoizeOne(getDepts)\n    memoGetDepts();\n  }, [kntxt]);\n  \n  return (\n    <div className=\"met-depts\" onClick={ toggleMenu } style={ !showingMenu ? {top: -2000} : {}}>\n      {\n        deptsData.length && showingMenu ? deptsData.map(\n          dept => <Link key={dept.departmentId} to={\"/d/\"+slugify(dept.displayName)}>{dept.displayName}</Link>\n          ) : <Spinner />\n      }\n    </div>\n  );\n});\n\n\n\nexport default Departments;","import { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Departments from './MET/Departments';\n\nconst Header = () => {\n\n  const [ showingMenu, setShowingMenu ] = useState(false)\n  const toggleMenu = () => {\n    document.body.style.overflow = (!showingMenu ? \"hidden\" : \"auto\")\n    setShowingMenu(!showingMenu);\n  }\n  return (\n    <header>\n      <Link to=\"/\">\n        <h2>Synesthesia</h2>\n      </Link>\n        <p onClick={ toggleMenu } className=\"dept-link\">Departments</p>\n        <Departments toggleMenu={toggleMenu} showingMenu={showingMenu} setShowingMenu={setShowingMenu} />\n    </header>\n  );\n};\n\nexport default Header;","import React, { useEffect, useState } from 'react';\nimport {Link} from 'react-router-dom';\nimport Spinner from './Spinner'\n\n\nconst Intro = () => {\n\n  const [ images, setImages ] = useState(null);\n  const [ readyToFetch, setReadyToFetch ] = useState(null);\n\n  const randImg = listLength => Math.floor(Math.random() * listLength);\n\n  useEffect(()=> {\n    if(!readyToFetch){\n      fetch(\"https://collectionapi.metmuseum.org/public/collection/v1/search?isHighlight=false&hasImages=true&departmentId=11&q=‎a\")\n      .then(res => res.json())\n      .then(res => { return setImages(res.objectIDs)})\n      setReadyToFetch(r => !r)\n    }\n\n  }, [readyToFetch])\n\n  return (\n    <div className=\"intro\">\n      <h2>This is an experimental gallery that uses art data from\n      The Metropolitan Museum of Art. </h2>\n      \n      <p>Use the department menu in the\n      top right to browse the gallery and click on the art cards to \n      reveal more information. To begin the synesthetic experience\n      just click on the <b>𝄞</b> located on the flipside of each card.\n      </p>\n      <hr></hr>\n      <h3>{ images ? \"Jump directly to the experience with a random image\" : \"Selecting a random image...\"}</h3>\n      { images ? \n      (<Link to={`/s/${ images[randImg(images.length)] }`}>\n        <button>Experience Synesthesia 𝄞</button>\n      </Link>) : <Spinner />\n      }\n      \n\n    </div>\n  );\n};\n\nexport default Intro;","export default __webpack_public_path__ + \"static/media/link.6918f19b.svg\";","export default __webpack_public_path__ + \"static/media/g-clef.e61643d8.svg\";","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport linkSVG from  '../../static/link.svg'\nimport gclefSVG from  '../../static/g-clef.svg'\n\nconst ArtObject = React.memo(({ obj, timeOffsetIndex }) => {\n    const [cardOpen, setCardOpen] = useState(false);\n    const [showInfo, setShowInfo] = useState(false);\n    const [ hideCard, setHideCard ] = useState(true);\n\n    useEffect(() => {\n      setTimeout(() => setHideCard(false), timeOffsetIndex * 300);\n    }, [setHideCard, timeOffsetIndex])\n\n    function flipCard(){\n      setCardOpen(!cardOpen);\n      setTimeout(() => setShowInfo(!showInfo), 125); // 125ms is half of css animation duration\n    }\n\n    return (\n        <div\n            key={ obj.objectID }\n            className={'art-obj-card' + (hideCard ? '' : (cardOpen ? ' flip' : ' flop'))}\n            onClick={ flipCard }\n            style={( hideCard ? {opacity: 0} : {})}\n        >\n            <img draggable=\"true\" alt={obj.title} src={obj.primaryImageSmall} />\n            { showInfo &&\n                <div className=\"art-obj-info\">\n                    <Link to={`/art-object/${ obj.objectID }`}><img id=\"link-icon\" alt=\"Link icon\" src={linkSVG} /></Link>\n                    <Link to={`/s/${ obj.objectID }`}><img id=\"link-icon\" alt=\"Link icon\" src={gclefSVG} /></Link>\n                    <h3>{obj.title}</h3>\n                    <h4>{obj.objectDate}</h4>\n                    <h5>{obj.culture}</h5>\n                    <ul className=\"art-medium\">\n                        <li>\n                            <strong>Medium:</strong> {obj.medium}\n                        </li>\n                        <li>\n                            <strong>Classification</strong> {obj.classification}\n                        </li>\n                    </ul>\n                    { obj.artistDisplayBio &&\n                        <ul>\n                          <h4>{ obj.artistDisplayName }</h4>\n                            <p className=\"artist-dates\">( { obj.artistBeginDate } - { obj.artistEndDate })</p>\n                            <p>{ obj.artistDisplayBio }</p>\n                            <p>{ obj.artistNationality }</p>\n                        </ul>\n                    }\n                </div>\n            }\n        </div>\n    );\n});\n\nexport default ArtObject;\n","import React, { useState, useContext, useEffect } from 'react';\nimport ArtObject from './ArtObject';\nimport {SynesthesiaContext} from '../SynesthesiaContext';\nimport Spinner from '../Spinner';\n\nfunction useOnScreen(options){\n  const [ ref, setRef ] = useState(null);\n  const [ visible, setVisible ] = useState(false);\n\n  useEffect(() => { \n    const observer = new IntersectionObserver(([ entry ]) => {\n      setVisible(entry.isIntersecting)\n    }, options )\n\n    if(ref) {\n      observer.observe(ref);\n    }\n\n    return () => {\n      if(ref){\n        observer.unobserve(ref)\n      }\n    }\n\n  }, [ref, options]);\n\n  return [setRef, visible]\n}\n\nconst ArtObjects = ({ ids }) => {\n\n  const [ setRef, visible ] = useOnScreen({ rootMargin: \"-100px\"})\n\n  const cuttoff = 10;\n\n  const [ metObjs, setMetObjs ] = useState([]);\n  const [ idsState, setIdsState ] = useState(ids);\n  const [ readyToFetch, setReadyToFetch ] = useState(true);\n  const { kntxt } = useContext(SynesthesiaContext);\n\n  // replace readyToFetch with proper hook logic\n  useEffect(() => {\n    const getObjs = async() => {\n      if(idsState.length){\n        let [ tempIds, restIds ] = [idsState.slice(0, cuttoff), idsState.slice(cuttoff)];\n        let objs = await kntxt.metAPI.getObjs(tempIds);\n        setMetObjs([...metObjs, ...objs]);\n        setIdsState(restIds)\n        setReadyToFetch(true);\n      }\n      // else{ console.log(\"trying to run fetch but no ids avail\") }\n    };\n    // visible handles lazyloading of images on scroll to bottom\n    if(visible && readyToFetch) {\n      setReadyToFetch(false);\n      getObjs()\n    }\n  }, [visible, idsState, kntxt, metObjs, readyToFetch]);\n\n\n  return (\n    <div className=\"art-objects-container\">\n      {\n        metObjs.length ? metObjs.map((obj, i) => <ArtObject  key={ i } obj={ obj } timeOffsetIndex={ i % cuttoff } />) : ''\n      }\n      <p ref={ setRef } id=\"sentinel\" key=\"sentinel\">⎯⎯⎯ { idsState.length ? idsState.length +  \" Art\" : \"No\" } Objects Left To Load ⎯⎯⎯</p>\n      { idsState.length && !readyToFetch ? <Spinner /> : ''}\n    </div>\n  );\n};\n\nexport default ArtObjects;","import React, { useState, useContext, useEffect} from 'react';\nimport { SynesthesiaContext } from '../SynesthesiaContext';\nimport ArtObjects from './ArtObjects';\nimport Spinner from '../Spinner';\n\nconst DepartmentDetails = ({match}) => {\n\n  const [ objIDs, setObjsIDs ] = useState([]);\n  const [ deptsData, setDetptsData ] = useState([]);\n\n  const {kntxt} = useContext(SynesthesiaContext);\n\n  const slug = match.params.dept;  \n\n\n  useEffect(() => { \n    setObjsIDs([]);\n\n    // Get Department Names\n    const getDepts = async () => {\n      let depts = await kntxt.metAPI.getDepartments();\n      setDetptsData(depts.departments);\n    };\n    getDepts();\n\n    // Get Department Objects\n    const getDeptObjs = async () => {\n      let deptID = await kntxt.metAPI.getDeptObjsBySlug(slug);\n      let deptObjIDs = await kntxt.metAPI.getDepartmentObjectIDs(deptID);\n      setObjsIDs(await Promise.all(deptObjIDs));\n    };\n    getDeptObjs();\n\n   } , [kntxt, slug]);\n\n\n  return (\n    <div>\n      { deptsData.length ? (\n          deptsData.filter( dept => dept.slug === slug)\n          .map((dept, key) => (\n            <h1 key={ key }>{dept.displayName}</h1>\n          ))\n      ) : <Spinner /> }\n\n      {\n        objIDs.length ? <ArtObjects ids={ objIDs } setids={ setObjsIDs } /> : <Spinner />\n      }\n\n\n    </div>\n  );\n};\n\nexport default DepartmentDetails;","import React, { useEffect, useContext, useState } from 'react';\nimport {SynesthesiaContext} from '../SynesthesiaContext'\nimport ArtObject from './ArtObject';\n\nconst ArtObjSharing = ({ match }) => {\n\n  const { kntxt } = useContext(SynesthesiaContext);\n  const [readyToFetch , setReadyToFetch ] = useState(true);\n  const [ obj, setObj ] = useState(null);\n\n  // replace readyToFetch with proper hook logic\n  useEffect(() => {\n    const getObj = async id => {\n      let objJSON = await kntxt.metAPI.getObj(id);\n      setObj(objJSON);\n      setReadyToFetch(false);\n      console.log(objJSON);\n    }\n    if(readyToFetch) getObj(match.params.id)\n  })\n\n  return (\n    <>\n      { obj ? <ArtObject obj={obj} /> : <h3>Object Loading...</h3> }\n    </>\n  );\n};\n\nexport default ArtObjSharing;","import React, { useEffect, useRef, useState } from 'react';\nimport { RGBAToHSLA } from '../Tools';\nimport Spinner from './Spinner'\nimport * as Tone from 'tone';\n\nconst SynesthesiaCanvas = ({ imgURL }) => {\n    const [color, setColor] = useState(null);\n    const [mouse, setMouse] = useState(null);\n    const [synth, setSynth] = useState(null);\n    const [canvaReady, setCanvasReady] = useState(false);\n\n    const [timeoutObj, setTimeoutObjs] = useState(null);\n\n    const modeCheckBoxRef = useRef(null);\n    const modeSwitchRef = useRef(null);\n    const switcherRef = useRef(null);\n\n    // mode switcher\n    const switchMode = className => {\n        let dm = className;\n        if (switcherRef.current.classList.contains(dm)) {\n            switcherRef.current.classList.remove(dm);\n        } else {\n            switcherRef.current.classList.add(dm);\n        }\n    };\n\n    const switchCheckbox = e => {\n        switchMode('darkmode');\n        modeCheckBoxRef.current.checked = !modeCheckBoxRef.current.checked;\n    };\n\n\n    // https://stackoverflow.com/a/43881141/5727431\n    const proxy = process.env.REACT_APP_PROXY;\n\n    const canvasRef = useRef(null);\n    const colorSquareRef = useRef(null);\n    const [ctxState, setCtxState] = useState({});\n\n    const startSound = async () => {\n        await Tone.start();\n        const synthObj = new Tone.Synth().toDestination();\n        setSynth(synthObj);\n    };\n\n    const getPixelColor = ev => {\n        clearTimeout(timeoutObj);\n        let { pageX: x, pageY: y } = ev;\n\n        if (canvasRef.current.offsetParent) {\n            const { offsetLeft, offsetTop } = canvasRef.current;\n            x -= offsetLeft;\n            y -= offsetTop;\n        }\n        const [r, g, b, a] = ctxState.getImageData(x, y, 1, 1).data;\n        setColor(`rgba(${r}, ${g}, ${b}, ${a})`);\n        const [h, s, l] = RGBAToHSLA(r, g, b, a);\n        const levels = 2 * l - 1;\n        let soundFreq = h * 1.23 + 440;\n        setTimeoutObjs(\n            setTimeout(() => {\n                synth.volume.value = Tone.gainToDb(s + .5);\n\n                if (l < .5) {\n                    synth.oscillator.type = 'sine';\n                    synth.envelope.attack = 0.1;  // faster attack for brighter sounds\n                } else {\n                    synth.oscillator.type = 'triangle';\n                    synth.envelope.attack = 0.5;  // slower attack for darker sounds\n                }\n\n                if (modeCheckBoxRef.current.checked){\n                    soundFreq += soundFreq * levels;\n                }\n                synth.triggerAttackRelease(soundFreq, '2n');\n            }, 6)\n        );\n        setMouse({ x, y });\n    };\n\n    useEffect(() => {\n        const prepareSoundCanvas = imgURL => {\n            const canvas = canvasRef.current;\n            const ctx = canvas.getContext('2d');\n            const img = new Image();\n            img.crossOrigin = 'Anonymous';\n            img.onload = function () {\n                const proportionedHeight =\n                    (this.naturalHeight * window.innerWidth) /\n                    this.naturalWidth;\n                canvas.width = window.innerWidth;\n                canvas.height = proportionedHeight;\n                ctx.drawImage(img, 0, 0, canvas.width, proportionedHeight);\n                setCtxState(ctx);\n                setCanvasReady(true);\n            };\n            if(imgURL === 'color.png'){\n                img.src = `/${imgURL}`;\n            }else{\n                img.src = proxy + imgURL;\n            }\n        };\n\n        if (imgURL) prepareSoundCanvas(imgURL);\n    }, [imgURL, proxy, modeSwitchRef, modeCheckBoxRef]);\n\n    return (\n        <div>\n            <div\n                ref={colorSquareRef}\n                className=\"color-square\"\n                style={\n                    color\n                        ? {\n                              background: color,\n                              top: mouse.y + 150 - window.scrollY,\n                              left: mouse.x + 40 - window.scrollX,\n                          }\n                        : {}\n                }\n            ></div>\n            <div id=\"mode-switch\" ref={modeSwitchRef} onClick={switchCheckbox}>\n                <span id=\"switcher\" ref={switcherRef}></span>\n            </div>\n            <input\n                type=\"checkbox\"\n                name=\"mode\"\n                ref={modeCheckBoxRef}\n                id=\"mode-checkbox\"\n                defaultChecked\n            />\n\n            <canvas\n                id=\"synth-canvas\"\n                onMouseMove={getPixelColor}\n                ref={canvasRef}\n            ></canvas>\n\n            <div className=\"modal\" style={synth ? { display: 'none' } : {}}>\n                <p>\n                    Click start and move your mouse over the image to experience\n                    the sound of each color.\n                </p>\n                { canvaReady ? <button onClick={startSound}>Start Synesthesia</button> : <div><h4>Loading Image</h4><Spinner /></div>}\n                \n            </div>\n        </div>\n    );\n};\n\nexport default SynesthesiaCanvas;\n","import React, { useEffect, useState, useContext } from 'react';\nimport {SynesthesiaContext} from \"./SynesthesiaContext\";\nimport SynesthesiaCanvas from \"./SynesthesiaCanvas\";\nimport Spinner from \"./Spinner\";\n\nconst Synesthesia = ({ match }) => {\n\n  const { kntxt } = useContext(SynesthesiaContext);\n  const [ artObj, setArtObj ] = useState({});\n\n  const artObjID = match.params.id;\n  console.log({artObjID})\n\n\n  \n\n\n  useEffect(() => {\n    const getObj = async id => {\n      let objDataJSON = await kntxt.metAPI.getObj(id);\n      setArtObj(objDataJSON);\n    }\n    if(artObjID !== 'color'){\n      getObj(artObjID);\n    }else{\n      setArtObj(\n        {\n          type: \"color\",\n          primaryImage: \"color.png\"\n        }\n      )\n    }\n  }, [setArtObj, kntxt, artObjID]);\n\n  return (\n    <div className=\"synesthesia\">\n      { artObj !== {} ? (\n        <div>\n          <h1>{ artObj.title }</h1>\n          <SynesthesiaCanvas imgURL={ artObj.primaryImage } />\n        </div>\n      )  : <Spinner /> }\n\n    </div>\n  );\n};\n\nexport default Synesthesia;","import Intro from './Intro';\nimport { Route } from 'react-router-dom';\nimport DepartmentDetails from './MET/DepartmentDetails';\nimport ArtObjSharing from './MET/ArtObjSharing';\nimport Synesthesia from './Synesthesia';\n\nconst Main = () => {\n\n  return (\n    <main>\n      <Route exact path=\"/\" component={ Intro } />\n      <Route path=\"/s/:id\" render={ routerprops => (\n        <Synesthesia match={ routerprops.match } />\n      )} />\n      <Route exact path=\"/art-object/:id\" render={ routerprops => (\n        <ArtObjSharing match={ routerprops.match } />\n      )} />\n      <Route path=\"/d/:dept\" render={ routerprops => (\n        <DepartmentDetails match={ routerprops.match } />\n      )} />\n    </main>\n  );\n};\n\nexport default Main;","import React, { useState } from 'react';\nimport { Route } from 'react-router-dom';\nimport Header from './components/Header';\nimport Main from './components/Main';\nimport { SynesthesiaContext } from './components/SynesthesiaContext.jsx';\nimport './App.css';\nimport { slugify, getQueryParamStr, asciiLower } from './Tools';\n\nfunction App() {\n\n  const [ paintingData, setPaintingData ] = useState({});\n  const [ metDepts,  setMetDepts ] = useState([]);\n  const [ multiRes, setMultiRes ] = useState(new Set());\n\n  // API TOOLS\n\n    // MET API Structure\n    const metAPI = {\n      url: 'https://collectionapi.metmuseum.org/public/collection/v1/',\n      endpoints: [ 'objects', 'object', 'departments', 'search' ],\n      getURL: function(endpoint, queryParams){\n        let queryParamStr = getQueryParamStr(queryParams);\n        return this.url + endpoint + (queryParamStr ?  '?' + queryParamStr : '')\n      },\n      callEndpoint: async function(enpoint, queryParams=null){\n        // console.log(\"FETCHING: %s\", this.getURL(enpoint, queryParams))\n        return fetch(this.getURL(enpoint, queryParams))\n          .then(res => res.json())\n          .then(res => res)\n      },\n      getDepartments: async function(stateObjSetter){\n        let res = await this.callEndpoint('departments');\n        res.departments.forEach(dept => {\n          let slug = slugify(dept.displayName);\n          dept.slug = slug;\n        });\n        return res;\n      },\n      getDepartmentObjectIDs: async function(deptKey){\n        let dataSetPromiseArr = [];\n        asciiLower().forEach( async (letter, i) => {\n          dataSetPromiseArr.push(\n            this.callEndpoint('search', \n            {isHighlight: true, departmentId:deptKey, hasImages:true, q:letter}\n          ));\n        })\n        return Promise.all(dataSetPromiseArr).then(\n          values => {\n            let dataSetArr = [];\n            let objIDset = new Set();\n            values.forEach( res => {\n              if(res.objectIDs){\n                res.objectIDs.forEach((e,j) => {\n                  if(!objIDset.has(e)) {\n                    dataSetArr.push(e );\n                  }\n                  objIDset.add(e);\n                })\n              }\n            })\n            return dataSetArr;\n          }\n        )\n      },\n      getObj: async function(objId){\n        let res = await this.callEndpoint(`objects/${objId}`);\n        return res\n      },\n      getObjs: async function(objsIDArr){\n        let objs = await Promise.all(objsIDArr.map(async objID => await kntxt.metAPI.getObj(objID)))\n        return objs\n      },\n      getDeptObjsBySlug: async function(slug){\n        let depts = await this.callEndpoint('departments');\n        let dept = depts.departments.filter(dept => {\n          let deptSlug = slugify(dept.displayName);\n          return deptSlug === slug\n        }).pop();\n        return dept.departmentId\n        \n      }\n    }\n\n  const kntxt = {\n    ...{ metAPI },\n    ...{ paintingData, setPaintingData },\n    ...{ metDepts,  setMetDepts },\n    ...{ multiRes, setMultiRes },\n  }\n\n  return (\n    <SynesthesiaContext.Provider value={{ kntxt }}>\n      <div className=\"App\">\n        <Header />\n        <Route path=\"/\" component={ Main } />\n      </div>\n    </SynesthesiaContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}